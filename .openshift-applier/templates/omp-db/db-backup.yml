---
kind: "Template"
apiVersion: "v1"
metadata:
  name: "${APP_NAME}-backup"
  annotations:
    description: "Scheduled task to perform mongodb backup"
    iconClass: "icon-shadowman"
objects:
#TODO: Set up the PVC so that it's set to retain instead of delete
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: "${APP_NAME}-backup"
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${VOLUME_CAPACITY}
- kind: "CronJob"
  apiVersion: "batch/v1beta1"
  metadata:
    name: "${APP_NAME}-backup"
    labels:
      template: "${APP_NAME}-backup"
  spec:
    schedule: "${SCHEDULE}"
    concurrencyPolicy: "Forbid"
    successfulJobsHistoryLimit: "${{SUCCESS_JOBS_HISTORY_LIMIT}}"
    failedJobsHistoryLimit: "${{FAILED_JOBS_HISTORY_LIMIT}}"
    jobTemplate:
      spec:
        template:
          spec:
            containers:
              - name: "${APP_NAME}-backup"
                image: "mongo:${MONGODB_VERSION}"
                command:
                - /bin/sh
                - -i
                - -c
#TODO: We should write the db dump to an archive, which will save some space later
                - mongodump -h ${APP_NAME} -d $DATABASE_NAME --username $DATABASE_USER --password $DATABASE_PASSWORD --out ${BACKUP_PATH}/${APP_NAME}-$(date +"%Y%m%d_%H%M%S")
                envFrom:
                  - name: DATABASE_CONNECTION_STRING
                    secretRef:
                      name: "${APP_NAME}"
                      key: DATABASE_CONNECTION_STRING
                  - name: MONGODB_USER
                    secretRef:
                      key: DATABASE_USER
                      name: ${APP_NAME}
                  - name: MONGODB_PASSWORD
                    secretRef:
                      key: DATABASE_PASSWORD
                      name: ${APP_NAME}
                  - name: MONGODB_ADMIN_PASSWORD
                    secretRef:
                      key: DATABASE_ADMIN_PASSWORD
                      name: ${APP_NAME}
                  - name: MONGODB_DATABASE
                    secretRef:
                      key: DATABASE_NAME
                      name: ${APP_NAME}
                volumeMounts:
                  - mountPath: "${BACKUP_PATH}"
                    name: "${APP_NAME}-backup"
            volumes:
              - name: ${APP_NAME}-backup 
                persistentVolumeClaim:
                  claimName: "${APP_NAME}-backup"
            restartPolicy: "Never"
            terminationGracePeriodSeconds: 30
            activeDeadlineSeconds: 500
            dnsPolicy: "ClusterFirst"

parameters:
  - name: "APP_NAME"
    displayName: "Job Name"
    description: "Name of the Scheduled Job to Create."
    value: "omp-db"
    required: true

  - name: "SCHEDULE"
    displayName: "Cron Schedule"
    description: "Cron Schedule to Execute the Job"
    value: "@hourly"
    required: true

  - name: "SUCCESS_JOBS_HISTORY_LIMIT"
    displayName: "Successful Job History Limit"
    description: "The number of successful jobs that will be retained"
    value: "5"
    required: true

  - name: "FAILED_JOBS_HISTORY_LIMIT"
    displayName: "Failed Job History Limit"
    description: "The number of failed jobs that will be retained"
    value: "5"
    required: true

  - name: "MONGODB_VERSION"
    displayName: "Image Tag"
    description: "Image Tag to use for the container."
    required: true
    value: "3.4"

  - name: VOLUME_CAPACITY
    displayName: "Volume Capacity"
    description: "Volume space available for data, e.g. 512Mi, 2Gi."
    value: "1Gi"
    required: true

  - name: BACKUP_PATH
    displayName: "DB Backup Path"
    description: "Backup Path for MongoDB exports"
    required: true
    value: /opt/app-root/src

labels:
  template: "${APP_NAME}-backup"
